exit
12 + 3
""
"  "O
"  "
"foo" + "bar"
first_name = "Michael"
"#{first_name} Hartl"
first_name = "Michael"
puts "foo"
a = '\n这是一个单引号的字符串，反斜线和变量插值不会被转义'
a
c = "\n这是一个双引号的字符串，反斜线和变量插值会被转义\n#{a}"
"foobar".empty?
"".empty?
s = "aa"
if s.empty?\
  "This string is empty"\
else\
  "This string is NOT empty"\
end
nil.to_s
true.to_s
!!nil
!!0
def string_message(str = '')\
  return "It's an empty string!" if str.empty?\
  return "The string is nonempty."\
end
string_message()
string_message('hello')
exit
a = {}
a.b = 3
a['b'] = 3
a
a.b
a[c]=5
a[:c]=5
:c
string_message 'bb'
class Word\
  def palindrome?(string)\
    string == string.reverse\
  end\
end
w = Word.new
w.palindrome?('foobar')
w.palindrome?('level')
w.class
w.class.superclass
w.class
class String\
  def palindrome?\
    self == self.reverse\
  end\
end
"deified".plaindrome?
"level".class
clear
class String\
  def palindrome?\
    self == self.reverse\
  end\
end
'level'.palindrome?
exit
require './example_user'
example = User.new
example.name = "Example User"
example.email = "[email protected]"
example.formatted_email
exit
